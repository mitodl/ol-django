---
name: CI
on: [push, workflow_dispatch]

jobs:
  changelog:
    runs-on: ubuntu-24.04
    name: Check for required changelogs
    if: ${{ !contains(github.event.head_commit.author, 'renovate') }}
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        fetch-depth: 0   # fetch all history

    - name: Install uv
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6

    - name: Install dependencies
      run: uv sync

    - name: Changelog
      run: uv run scripts/changelog.py check


  tests:
    runs-on: ubuntu-24.04
    name: Python tests
    strategy:
      matrix:
        python-version:
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"

    # Service containers to run
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
        - 5432:5432

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        fetch-depth: 0   # fetch all history

    - name: Apt update
      run: sudo apt-get update

    - name: Apt install
      run: sudo apt-get install -y libxmlsec1-dev

    - name: Install uv
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6

    - name: Pin python-version ${{ matrix.python-version }}
      run: uv python pin ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync

    - name: Tests
      run: uv run pytest

      # - name: Upload coverage to CodeCov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     directory: ${{ matrix.app-name }}/coverage/
      #     flags: ${{ matrix.app-name }}

  release:
    needs: tests
    name: Publish to PyPI
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

    - name: Install uv
      uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6

    # extract the app name out of the tag's ref value
    - id: get-app-name
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
      with:
        script: |
          const appName = context.ref.match(/refs\/tags\/([a-z\-]+)\/v\S+$/)[1]
          core.setOutput('app-name', appName)
          core.setOutput('app-package', appName.replace("mitol-django-", "").replace(/-/g, "_"))

    - name: Build
      run: PYTHONPATH=build-support/bin uv build "src/${{steps.get-app-name.outputs.app-package}}"

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
