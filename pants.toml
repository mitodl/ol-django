[GLOBAL]
pants_version = "2.21.0"
pants_ignore.remove = [
  # this is gitignored, which pants pulls in, so we need to un-ignore it
  "testapp/settings/dev.py",
]
pythonpath = [
  "%(buildroot)s/pants-plugins"
]
backend_packages = [
  'pants.backend.python',
  'pants.backend.experimental.python.lint.ruff.check',
  'pants.backend.experimental.python.lint.ruff.format',
  'pants.backend.python.typecheck.mypy',
  # custom pants plugins
  'python_distribution',
]

[anonymous-telemetry]
enabled = false

[source]
root_patterns = [
  "src",
  "tests",
  "/build-support/bin",
  "/pants-plugins",
]

# Increase batch sizes to account for Ruff rules that need to incorporate a whole
# package space (e.g. I001)
[lint]
batch_size=1024

[fix]
batch_size=1024

[test]
extra_env_vars = [
  "DATABASE_URL",
  "DJANGO_SETTINGS_MODULE=testapp.settings.test",
]

[repl]
shell = "ipython"

[ipython]
install_from_resolve = "testing"

[python]
interpreter_constraints = ['>=3.8']
enable_resolves = true

[python.resolves]
python-default = "build-support/lockfiles/python-default.lockfile" 
testing = "build-support/lockfiles/testing.lockfile"

[setup-py-generation]
first_party_dependency_version_scheme = "any"

[mypy]
install_from_resolve = "testing"
requirements = [
  "//build-support#django-stubs",
  "//build-support#djangorestframework-stubs[compatible-mypy]"
]

[pytest]
install_from_resolve = "testing"
args = [
  "--cov .",
  "--cov-report term ",
  "--cov-report html",
  "--cov-report xml",
  "--reuse-db"
]
requirements = [
  "//build-support#pytest-django",
  "//build-support#pytest-mock",
  "//build-support#ipdb"
]
execution_slot_var = "PANTS_EXECUTION_SLOT"

[ruff]
install_from_resolve = "testing"
config = "pyproject.toml"