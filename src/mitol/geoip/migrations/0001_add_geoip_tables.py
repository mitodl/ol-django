# Generated by Django 3.2.21 on 2023-09-22 21:27

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Geoname",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("geoname_id", models.IntegerField()),
                ("locale_code", models.TextField()),
                ("continent_code", models.CharField(max_length=2)),
                ("continent_name", models.TextField()),
                ("country_iso_code", models.CharField(max_length=2)),
                ("country_name", models.TextField()),
                (
                    "subdivision_1_iso_code",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("subdivision_1_name", models.TextField(blank=True, null=True)),
                (
                    "subdivision_2_iso_code",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("subdivision_2_name", models.TextField(blank=True, null=True)),
                ("city_name", models.TextField(blank=True, null=True)),
                ("metro_code", models.IntegerField(blank=True, null=True)),
                ("time_zone", models.TextField(blank=True, null=True)),
                (
                    "is_in_european_union",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NetBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_ipv6", models.BooleanField(blank=True, default=False)),
                (
                    "decimal_ip_start",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=39, null=True
                    ),
                ),
                (
                    "decimal_ip_end",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=39, null=True
                    ),
                ),
                ("ip_start", models.TextField(blank=True)),
                ("ip_end", models.TextField(blank=True)),
                ("network", models.TextField()),
                ("geoname_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "registered_country_geoname_id",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "represented_country_geoname_id",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "is_anonymous_proxy",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "is_satellite_provider",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("postal_code", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=16, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=16, null=True
                    ),
                ),
                ("accuracy_radius", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.AddConstraint(
            model_name="netblock",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("geoname_id__isnull", False),
                    ("registered_country_geoname_id__isnull", False),
                    ("represented_country_geoname_id__isnull", False),
                    _connector="OR",
                ),
                name="at_least_one_geoname_id",
            ),
        ),
        migrations.AddConstraint(
            model_name="geoname",
            constraint=models.UniqueConstraint(
                fields=("geoname_id", "locale_code"), name="unique_geoname_id_locale"
            ),
        ),
        migrations.AddIndex(
            model_name="netblock",
            index=models.Index(
                fields=["decimal_ip_start"], name="maxmind_net_decimal_dfdb1a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="netblock",
            index=models.Index(
                fields=["decimal_ip_end"], name="maxmind_net_decimal_6166c4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="netblock",
            index=models.Index(
                fields=["decimal_ip_start", "decimal_ip_end"],
                name="maxmind_net_decimal_ab7249_idx",
            ),
        ),
    ]
